spring:
 redis:
  host: redis
  port: 6379
  
 application:
  name: GATEWAY-SERVICE
 config:
  import: configserver:${CONFIG_SERVER:http://localhost:8085}
  
 cloud:
  gateway:
   routes:
    - id: ORDER-SERVICE
      uri: lb://ORDER-SERVICE
      predicates:
       - Path=/v1/order/**
      filters:
       - name: CircuitBreaker
         args:
          name: ORDER-SERVICE
          fallbackuri: forward:/orderServiceFallback
          
       - name: RequestRateLimiter
         args:
          redis-rate-limiter.replenishRate: 1
          redis-rate-limiter.burstCapacity: 1

    - id: PRODUCT-SERVICE
      uri: lb://PRODUCT-SERVICE
      predicates:
       - Path=/v1/product/**
      filters:
       - name: CircuitBreaker
         args:
          name: PRODUCT-SERVICE
          fallbackuri: forward:/productServiceFallback
       - name: RequestRateLimiter
         args:
          redis-rate-limiter.replenishRate: 1
          redis-rate-limiter.burstCapacity: 1
          
    - id: PAYMENT-SERVICE
      uri: lb://PAYMENT-SERVICE
      predicates:
       - Path=/v1/payment/**
      filters:
       - name: CircuitBreaker
         args:
          name: PAYMENT-SERVICE
          fallbackuri: forward:/paymentServiceFallback
       - name: RequestRateLimiter
         args:
          redis-rate-limiter.replenishRate: 1
          redis-rate-limiter.burstCapacity: 1
        
        
  
  
server:
 port: 9090
 
management:
 tracing:
  sampling:
   probability: 1

okta:
  oauth2:
    client-id: 0oah46e4rhUFUGcAe5d7
    client-secret: WdBQZsl089BqYCxMeU-D6b9d7ftfGLw1vJrACA3p9dVwSWK7oJa-klJKN5jd4978
    scopes: openid, email, profile, offline_access

 
